--- 
- name: Debian OS 
  block:  

    - name: Install Nginx Debian
      ansible.builtin.apt:
        name:
          - nginx
        state: present
        update_cache: yes

    
    # cp ./nginx/conf.d/upstreams.conf.j2 /etc/nginx/conf.d/upstreams.conf
    # cp ./nginx/sites-available/upstreams.j2 /etc/nginx/sites-available/upstreams
    - name: Template nginx config files
      ansible.builtin.template:
        src: "nginx/{{ item }}.j2"
        dest: "/etc/nginx/sites-available/{{ item }}"
      loop: 
        - phpsite


    # ln -s /etc/nginx/sites-{available/upstreams,enabled/default}
    - name: Create a symbolic default link to /etc/nginx/sites-available/upstreams
      ansible.builtin.file:
        src: /etc/nginx/sites-available/phpsite
        dest: /etc/nginx/sites-enabled/default
        state: link
  when: ansible_os_family == 'Debian'


- name: RedHat OS
  block:


    # dnf install nginx -y
    - name: Install Nginx RedHat
      ansible.builtin.yum:
        disable_gpg_check: yes
        name: 
          - nginx
        state: latest

    # cp ./nginx/conf.d/upstreams.conf.j2 /etc/nginx/conf.d/upstreams.conf
    # cp ./nginx/sites-available/upstreams.j2 /etc/nginx/sites-available/upstreams
    - name: Template nginx config files
      ansible.builtin.template:
        src: "nginx/{{ item }}.j2"
        dest: "/etc/nginx/conf.d/{{ item }}.conf"
      loop: 
        - phpsite

  when: ansible_os_family == 'RedHat'

#systemctlenable nginx --now 
- name: Start Nginx service
  ansible.builtin.systemd:
    name: nginx
    state: started
    enabled: yes
        