---
- name: Debian OS
  block:

  # apt install nginx -y
  - name: Nginx | Install nginx Debian
    ansible.builtin.apt:
      name:
        - nginx
      state: latest
      update_cache: yes

  # cp ./nginx/conf.d/upstreams.conf.j2 /etc/nginx/conf.d/upstreams.conf
  # cp ./nginx/sites-available/upstreams.j2 /etc/nginx/sites-available/upstreams
  - name: Nginx | Template nginx config files
    ansible.builtin.template:
      src: "nginx/{{ item }}.j2"
      dest: "/etc/nginx/sites-available/{{ item }}"
    loop:
      #- conf.d/upstreams.conf
      - phpsite

  # ln -s /etc/nginx/sites-{available/upstreams,enabled/default}
  - name: Nginx | Create a symbolic default link to /etc/nginx/sites-available/upstreams
    ansible.builtin.file:
      src: /etc/nginx/sites-available/phpsite
      dest: /etc/nginx/sites-enabled/default
      state: link
  
  when: ansible_os_family == "Debian"

- name: Redhat OS
  block:

  # dnf install nginx -y
  - name: Nginx | Install nginx RedHat
    ansible.builtin.dnf:
      disable_gpg_check: yes
      name:
        - nginx
      state: latest

  # cp ./nginx/conf.d/wp.conf.j2 /etc/nginx/conf.d/wp.conf
  - name: Nginx | Template nginx config files
    ansible.builtin.template:
      src: "{{ item }}.j2"
      dest: "/etc/nginx/conf.d/{{ item }}"
    loop:
      - wp.conf
  
  when: ansible_os_family == "RedHat"

# systemctl enable nginx --now
- name: Nginx | Start nginx service
  ansible.builtin.systemd:
    name: nginx
    state: restarted
    enabled: yes